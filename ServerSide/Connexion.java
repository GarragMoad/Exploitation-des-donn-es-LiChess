package ServerSide;

import Traitement.*;

import java.net.*;
import java.io.*;
import java.util.ArrayList;

public class Connexion extends Thread {

    private Demandes tables;
    private Socket connessione = null;
    private InputStreamReader in;
    private OutputStream out;
    private BufferedReader sIN;
    private PrintStream sOut;

    public Connexion(Socket con, Demandes t) {
        this.connessione = con;
        this.tables = t;
    }

    public Connexion() {
        connessione = null;
    }

    @Override
    public void run() {
        try {
            while (connessione != null) {
                // flusso in ingresso da socket
                sIN = new BufferedReader(new InputStreamReader(connessione.getInputStream()));
                sOut = new PrintStream(connessione.getOutputStream());
                while (true) {
                    if (!connessione.isConnected()) {
                        System.out.println("Il client ha chiuso la chat. ");
                        connessione = null;
                    } else {
                        int chois = Integer.parseInt(sIN.readLine());
                        if(chois==5)break;
                        switch (chois) {
                            case 1: {
                                String name1 = sIN.readLine();
                                String name2 = sIN.readLine();
                                String time = sIN.readLine();
                                System.out.println(name1+"\n"+name2+"\n"+time);
                                String result = tables.VisualiserPartie(name1, name2, time);
//                                System.out.println("res >> "+result);
                                sOut.println(result);
                                sOut.println("fin");
                                break;
                            }
                            case 2: {
                                String name = sIN.readLine();
                                ArrayList<String> result = tables.getPartiesJoueur(name);
                                System.out.println("res >> "+result.toString());
                                for (int i = 0 ; i < result.size() ; i++) {
                                    sOut.println(result.get(i));
                                }
                                sOut.println("fin");
                                break;
                            }
                            case 3: {
                                ArrayList<String> result = tables.ouverturePlusJouer();
                                System.out.println("res >> "+result.toString());
                                for (int i = 0 ; i < result.size() ; i++) {
                                    sOut.println(result.get(i));
                                }
                                sOut.println("fin");
                                break;
                            }
                            case 4: {
                                ArrayList<String> result = tables.plusCourtesParties();
                                System.out.println("res >> "+result.toString());
                                for (int i = 0 ; i < result.size() ; i++) {
                                    sOut.println(result.get(i));
                                }
                                sOut.println("fin");
                                break;
                            }
                        }
                    }
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
